// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Persona {
  id              String    @id @default(uuid())
  nombre          String
  apellido        String
  telefono        String?
  direccion       String?
  fechaNacimiento DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relaciones
  usuario Usuario?
}

model Usuario {
  id              String     @id @default(uuid())
  personaId       String     @unique
  email           String     @unique
  passwordHash    String
  rol             RolUsuario
  emailVerificado Boolean    @default(false)
  activo          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // Relaciones
  persona  Persona   @relation(fields: [personaId], references: [id], onDelete: Cascade)
  empleado Empleado?
}

model Empleado {
  id             String   @id @default(uuid())
  usuarioId      String   @unique
  departamentoId Int
  cargoId        Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relaciones
  usuario      Usuario      @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  departamento Departamento @relation(fields: [departamentoId], references: [id], onDelete: Restrict)
  cargo        Cargo        @relation(fields: [cargoId], references: [id], onDelete: Restrict)
}

model Departamento {
  id          Int      @id @default(autoincrement())
  descripcion String
  habilitado  Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  empleados Empleado[]
}

model Cargo {
  id          Int      @id @default(autoincrement())
  descripcion String
  habilitado  Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  empleados Empleado[]
}

enum RolUsuario {
  CANDIDATO
  RECLUTADOR
  ADMIN
}
